name: Destroy Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: Cloud Provider
        required: true
        type: choice
        options:
        - azure
        - aws

      environment:
        description: Environment
        required: false
        type: choice
        default: dev
        options:
        - dev
        - prod

      destroy_all_resources:
        description: "Destroy all resources?"
        required: true
        default: false
        type: boolean

env:
  TF_VERSION: '1.9.8'

jobs:
  terraform:
    runs-on: robot-shop-runner
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set AWS Credentials
      if: ${{ inputs.cloud_provider == 'aws' }}
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "Configured AWS creds"

    - name: Set Azure Credentials
      if: ${{ inputs.cloud_provider == 'azure' }}     
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID_TERRAFORM }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET_TERRAFORM }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "Configured Azure creds"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: |
        terraform init
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .terraform.lock.hcl
        git commit -m "Updated Terraform lock file" || echo "No changes to commit"
        git push || echo "No changes to push"
      working-directory: ${{ inputs.cloud_provider }}

    - name: Terraform Destroy
      if: ${{ inputs.destroy_all_resources }}
      run: |
        terraform destroy -auto-approve -var-file="${{ inputs.environment }}.tfvars"
      working-directory: ${{ inputs.cloud_provider }}